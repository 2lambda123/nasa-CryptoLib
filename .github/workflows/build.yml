name: CryptoLib

on: 
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  #
  # Minimal Build
  #
  minimal_build:
    # Container Setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Update
      run: sudo apt-get update
    - name: Install Dependencies
      run: sudo apt-get install -y lcov libcurl4-openssl-dev libmariadb-dev libmariadb-dev-compat libgcrypt20-dev python3 
    - name: Install Python Libraries
      run: sudo pip install pycryptodome
    # End Container Setup
    
    - name: Minimal Build Script
      working-directory: ${{github.workspace}}
      run: bash ${GITHUB_WORKSPACE}/support/scripts/build_minimal.sh

  #
  # Internal Build
  #
  internal_build:
    # Container Setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Update
      run: sudo apt-get update
    - name: Install Dependencies
      run: sudo apt-get install -y lcov libcurl4-openssl-dev libmariadb-dev libmariadb-dev-compat libgcrypt20-dev python3
    - name: Install Python Libraries
      run: sudo pip install pycryptodome
    # End Container Setup
    
    - name: Internal Build Script
      working-directory: ${{github.workspace}}
      run: bash ${GITHUB_WORKSPACE}/support/scripts/build_internal.sh

    - name: Code-Coverage
      working-directory: ${{github.workspace}}
      run: make gcov

    - name: Upload 
      uses: codecov/codecov-action@v1
      with:
        files: 'coverage/*.c.gcov'

  #
  # KMC Build
  #
  kmc_build:
    # Container Setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Update
      run: sudo apt-get update
    - name: Install Dependencies
      run: sudo apt-get install -y lcov libcurl4-openssl-dev libmariadb-dev libmariadb-dev-compat libgcrypt20-dev python3
    - name: Install Python Libraries
      run: sudo pip install pycryptodome
    # End Container Setup
    
    - name: KMC Build Script
      working-directory: ${{github.workspace}}
      run: bash ${GITHUB_WORKSPACE}/support/scripts/build_kmc.sh

  #
  # Wolf Build
  #
  wolf_build:
    # Container Setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Update
      run: sudo apt-get update
    - name: Install Dependencies
      run: sudo apt-get install -y lcov libcurl4-openssl-dev libmariadb-dev libmariadb-dev-compat libgcrypt20-dev python3 autoconf libtool
    - name: Install Python Libraries
      run: sudo pip install pycryptodome
    - name: Clone WolfSSL
      run: git clone --depth 1 --branch v5.6.0-stable https://github.com/wolfSSL/wolfssl.git /tmp/wolfssl
   
     #      cmake -DCMAKE_INSTALL_PREFIX=/home/runner/.local -DWOLFSSL_AESCCM=yes -DWOLFSSL_AESSIV=yes -DWOLFSSL_CMAC=yes ..;
    - name: Build WolfSSL
      #  -DCMAKE_INSTALL_PREFIX=/home/runner/.local
      run: cd /tmp/wolfssl/;
           mkdir -p /usr/local/share/doc/wolfssl;
           ./autogen.sh;
           ./configure;
           make;
           make check;
           make install;
    #  run: mkdir /tmp/wolfssl/build;
    #       cd /tmp/wolfssl/build;
    #       cmake -DWOLFSSL_AESCCM=yes -DWOLFSSL_AESSIV=yes -DWOLFSSL_CMAC=yes ..;
    #       cmake --build .;
    # End Container Setup
    
    - name: Wolf Build Script
      working-directory: ${{github.workspace}}
      run: bash ${GITHUB_WORKSPACE}/support/scripts/build_wolf.sh
